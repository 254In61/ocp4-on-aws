---
# Build worker nodes

# Collect vpc cloudformation stack details
- name: "sec- - Collect {{ vpc }} stack details"
  set_fact:
    root_name: "{{ vpc }}"

- import_tasks: ../../../modules/obtain-stack-info.yml

# Collect network-and-loadbalancers cloudformation stack details
- name: "sec - Collect {{ ntwk_and_lbs }} stack details"
  set_fact:
    root_name: "{{ ntwk_and_lbs }}"

- import_tasks: ../../../modules/obtain-stack-info.yml

# Collect sec groups and IAM roles cloudformation stack details
- name: "sec - Collect {{ sec_grp }} stack details"
  set_fact:
    root_name: "{{ sec_grp }}"

- import_tasks: ../../../modules/obtain-stack-info.yml

- import_tasks: ../../../modules/infra-name.yml

- import_tasks: ../../../modules/hosted-zone-id.yml

# The CloudFormation template creates a stack that represents one worker machine. You must create a stack for each worker machine.
# You must create at least two worker machines, so you must create at least two stacks that use this CloudFormation template.

# Build worker
- set_fact:
    root_name: "{{ worker }}"

# Common variables for all worker nodes
- name: worker-node - Set root name and ignition file name
  set_fact:
    ign_file: "{{ install_dir }}/worker.ign"
    cert_string_file: "{{ install_dir }}/worker-ign-cert.txt"
    max_range_value: "{{ worker_replicas + 1 }}"

- name: "{{ root_name }} - Obtain CertificateAuthorities value from igniition config file"
  shell: "jq -r .ignition.security.tls.certificateAuthorities[0].source {{ ign_file }} > {{ cert_string_file }}"

- name: "{{ root_name }} - Read the string in {{ cert_string_file }} and save it as variable"
  set_fact:
    CertificateAuthorities: "{{ lookup('ansible.builtin.file', '{{ cert_string_file }}') }}"
  
# From here, building different worker nodes.
# Yeees! I should this within a loop! But I don't have much time to keep testing that.

- import_tasks: ../../../modules/build-stack.yml
