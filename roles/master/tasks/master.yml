---
# Control plane tasks
# You must create the control plane machines in Amazon Web Services (AWS) for your cluster to use.

# Collect vpc cloudformation stack details
- name: "master - Collect {{ vpc }} stack info"
  set_fact:
    root_name: "{{ vpc }}"

- import_tasks: ../../../modules/set-vars.yml

# Collect network and load balancers details
- name: "master - Collect {{ lbs_dns }} stack info"
  set_fact:
    root_name: "{{ lbs_dns }}"

- import_tasks: ../../../modules/set-vars.yml

# Collect sec groups and IAM roles details
- name: "master - Collect {{ sec_grp }} stack info"
  set_fact:
    root_name: "{{ sec_grp }}"

- import_tasks: ../../../modules/set-vars.yml

# Build Master Nodes
- name: master - control-plane - Set root name
  set_fact:
    root_name: "{{ master }}"
    ign_file: "{{ install_dir }}/master.ign"
    PrivateHostedZoneName: "{{ cluster_name }}.{{ base_domain }}"
    cert_string_file: "{{ install_dir }}/master-ign-cert.txt"
    
- name: "{{ root_name }} - Obtain CertificateAuthorities value from igniition config file"
  shell: "jq -r .ignition.security.tls.certificateAuthorities[0].source {{ ign_file }} > {{ cert_string_file }}"

- name: "{{ root_name }} - Read the string in {{ cert_string_file }} and save it as variable"
  set_fact:
    CertificateAuthorities: "{{ lookup('ansible.builtin.file', '{{ cert_string_file }}') }}"

- import_tasks: ../../../modules/build-stack.yml

- name: "{{ root_name }} - Set outputs as variables"
  set_fact:
    PrivateIPs: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'PrivateIPs' ] }}"
