---
# Creating network objects
- name: network - Set root name
  set_fact:
    root_name: network
    stack_name: "{{ cluster_name }}-nwk-and-lb-stack"


- name: "{{ root_name }} - extract and view the infrastructure name from the Ignition config file metadata"
  command: jq -r .infraID {{ install_dir }}/metadata.json
  register: infra_name

# - debug:
#     var: infra_name

- name: "{{ root_name }} - Obtain the hosted zone ID for the Route 53 base domain"
  shell: "aws route53 list-hosted-zones-by-name --dns-name {{ base_domain }} --query 'HostedZones[0].Id' --output text | sed 's#/hostedzone/##'"
  register: hosted_zone_output

# - debug:
#     var: hosted_zone_output

- name: "{{ root_name }} - set values"
  set_fact:
    InfrastructureName: "{{ infra_name['stdout'] }}"
    HostedZoneId: "{{ hosted_zone_output['stdout'] }}"

- import_tasks: build-stack.yml

- name: "{{ root_name }} - Set outputs as variables"
  set_fact:
    ApiServerDnsName: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'ApiServerDnsName' ] }}"
    ExternalApiLoadBalancerName: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'ExternalApiLoadBalancerName' ] }}"
    ExternalApiTargetGroupArn: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'ExternalApiTargetGroupArn' ] }}"
    InternalApiLoadBalancerName: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'InternalApiLoadBalancerName' ] }}"
    InternalApiTargetGroupArn: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'InternalApiTargetGroupArn' ] }}"
    InternalServiceTargetGroupArn: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'InternalServiceTargetGroupArn' ] }}"
    PrivateHostedZoneId: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'PrivateHostedZoneId' ] }}"
    RegisterNlbIpTargetsLambda: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'RegisterNlbIpTargetsLambda' ] }}"

    