---
# - You must create the bootstrap node in Amazon Web Services (AWS) to use during OpenShift Container Platform cluster initialization. 
# - The provided CloudFormation Template assumes that the Ignition config files for your cluster are served from an S3 bucket. 
# - Create an S3 bucket which will hold the bootstrap.ign ignition file to your cluster.Then upload a copy of the file to the S3 bucket.

- name: bootstrap - Set root name
  set_fact:
    root_name: "{{ bootstrap }}"

- name: create-bootstrap-node - Build S3 bucket to store the bootstrap.ign file
  amazon.aws.s3_bucket:
    name: "{{ s3_ignition_file_store }}"
    state: present
  register: s3_create

# - debug:
#     var: s3_create

- name: "{{ root_name }} - Upload bootstrap.ign to s3 bucket"
  community.aws.s3_sync:
    bucket: "{{ s3_ignition_file_store }}"
    file_root: "{{ install_dir }}/bootstrap.ign"

# Confirm if file in the s3 bucket.. Needs some patience and time to get this working.
# - name: create-bootstrap-node - Verify that the file uploaded
#   command: "aws s3 ls s3://{{ s3_ignition_file_store }}"
#   register: s3_files_check
#   failed_when: "'bootstrap.ing' not in s3_files_check.stdout"

- import_tasks: ../../../modules/build-stack.yml

- name: "{{ root_name }} - Set outputs as variables"
  set_fact:
    BootstrapInstanceId: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'BootstrapInstanceId' ] }}"
    BootstrapPrivateIp: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'BootstrapPrivateIp' ] }}"
    BootstrapPublicIp: "{{ stack_info.cloudformation[ stack_name ][ 'stack_outputs' ][ 'BootstrapPublicIp' ] }}"
